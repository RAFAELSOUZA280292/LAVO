import os
import streamlit as st
from openai import OpenAI
import faiss
import pickle
from typing import List, Tuple

# ==========================
# Configura√ß√µes iniciais
# ==========================
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

EMBED_MODEL = "text-embedding-3-small"
CHAT_MODEL = "gpt-4o-mini"

# ==========================
# PROMPT DO SISTEMA
# ==========================
SYSTEM_PROMPT = """
Voc√™ √© a LAVO, especialista em Reforma Tribut√°ria da Lavoratory Group.
Fale SEMPRE em portugu√™s do Brasil, com precis√£o t√©cnica e did√°tica.

PERSONA E ESTILO
- Seja objetiva, clara e traga exemplos cont√°beis e fiscais pr√°ticos.
- Comporte-se como professora de cursinho (tom did√°tico), mas nunca diga isso.
- Mantenha respostas concisas, evitando jarg√µes desnecess√°rios.
- Sempre que poss√≠vel, organize em t√≥picos curtos.

PERSONALIZA√á√ÉO
- Sempre cumprimente o usu√°rio usando o NOME obtido no login (ex.: ‚ÄúOl√°, Rafael Souza!‚Äù).
- Use o nome ao longo da conversa.

ESCOPO E FONTES
- Responda SOMENTE sobre Reforma Tribut√°ria (BR): IVA/IBS/CBS, transi√ß√£o, regimes, n√£o cumulatividade, cr√©ditos, al√≠quotas, reparti√ß√£o de receitas, Comit√™ Gestor etc.
- Baseie-se APENAS no conte√∫do fornecido pelo sistema/assistente (contexto recuperado), sem inventar informa√ß√µes externas.
- Cite somente leis, PECs, ECs, PLPs, pareceres e nomes de professores/relatores (sem links).
- Nunca mencione ‚Äúarquivos‚Äù, ‚ÄúPDFs‚Äù, ‚Äúslides‚Äù, ‚Äúmateriais de aula‚Äù, ‚Äúchunks‚Äù ou ‚Äúcontexto recuperado‚Äù.

INCERTEZA E LIMITES
- Se a informa√ß√£o n√£o estiver no contexto ou voc√™ n√£o tiver certeza, diga:
  ‚ÄúAinda estou estudando, mas logo aprendo e voltamos a falar.‚Äù
- Se o pedido fugir do escopo, informe que o tema foge da sua atua√ß√£o e redirecione para Reforma Tribut√°ria.

FORMATA√á√ÉO DA RESPOSTA
- Estruture, quando fizer sentido:
  1) **Resumo r√°pido** (2‚Äì4 linhas).
  2) **Detalhamento pr√°tico** (bullets com regras, prazos, c√°lculos e exemplos).
  3) **Refer√™ncias normativas** (ex.: EC 132/2023; PLP 68/2024; Parecer XYZ).

N√öMEROS E VALORES
- Sempre escreva valores em reais com v√≠rgula (ex.: R$ 1.000,00).
- Sempre destaque o percentual (ex.: 18%).
- Em exemplos num√©ricos, mostre a conta completa.
  Ex.: ‚ÄúProduto de R$ 1.000,00 com al√≠quota de 18% ‚Üí ICMS de R$ 180,00‚Äù.
"""

# ==========================
# Fun√ß√µes auxiliares
# ==========================
def load_faiss_index(path="faiss.index", meta_path="faiss_meta.pkl"):
    if not os.path.exists(path) or not os.path.exists(meta_path):
        return None, []
    index = faiss.read_index(path)
    with open(meta_path, "rb") as f:
        metas = pickle.load(f)
    return index, metas

def embed_text(text: str):
    resp = client.embeddings.create(model=EMBED_MODEL, input=text)
    return resp.data[0].embedding

def search_index(query: str, index, metas, k=3):
    if index is None:
        return []
    q_emb = embed_text(query)
    D, I = index.search([q_emb], k)
    hits = []
    for rank, idx in enumerate(I[0]):
        if idx < 0 or idx >= len(metas):
            continue
        hits.append((rank+1, D[0][rank], metas[idx]))
    return hits

def answer_with_context(question: str, hits: List[Tuple[int, float, dict]], nome: str) -> str:
    contexto = "\n\n".join(f"[{rank}] {m['text_preview']}" for rank, score, m in hits)

    user_instruction = (
        f"Inicie a resposta cumprimentando a pessoa pelo nome exatamente assim: 'Ol√°, {nome}!'. "
        "Em seguida responda conforme o estilo e regras do sistema.\n"
        "Use apenas o conte√∫do abaixo como base."
    )

    messages = [
        {"role": "system", "content": SYSTEM_PROMPT},
        {"role": "user",
         "content": f"{user_instruction}\n\n<contexto>\n{contexto}\n</contexto>\n\nPergunta: {question}"}
    ]

    resp = client.chat.completions.create(
        model=CHAT_MODEL,
        messages=messages,
        temperature=0.0,
        max_tokens=600,
    )
    return resp.choices[0].message.content

# ==========================
# INTERFACE STREAMLIT
# ==========================
st.set_page_config(page_title="LAVO - Reforma Tribut√°ria", layout="centered")

st.title("üßë‚Äçüè´ LAVO - Especialista em Reforma Tribut√°ria")

# Login simples
if "user_name" not in st.session_state:
    nome = st.text_input("Digite seu nome para iniciar:", "")
    if nome:
        st.session_state["user_name"] = nome

if "user_name" in st.session_state:
    nome = st.session_state["user_name"]
    st.success(f"Bem-vindo, {nome}!")

    index, metas = load_faiss_index()
    if index is None:
        st.warning("‚ö†Ô∏è Nenhum √≠ndice encontrado. Suba os arquivos .txt e rode o indexador no GitHub Actions.")
    else:
        question = st.text_area("Digite sua pergunta sobre Reforma Tribut√°ria:", "")
        if st.button("Perguntar") and question.strip():
            hits = search_index(question, index, metas, k=3)
            answer = answer_with_context(question, hits, nome)
            st.markdown(answer)
